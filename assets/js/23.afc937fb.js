(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{220:function(t,i,v){"use strict";v.r(i);var _=v(0),l=Object(_.a)({},(function(){var t=this,i=t.$createElement,v=t._self._c||i;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"性能优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),v("h2",{attrs:{id:"性能优化是什么？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能优化是什么？"}},[t._v("#")]),t._v(" 性能优化是什么？")]),t._v(" "),v("ul",[v("li",[t._v("优化网站性能，提升用户体验。")])]),t._v(" "),v("h2",{attrs:{id:"为什么要性能优化？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么要性能优化？"}},[t._v("#")]),t._v(" 为什么要性能优化？")]),t._v(" "),v("ul",[v("li",[t._v("从用户角度而言，优化能够让页面加载得更快、对用户的操作响应得更及时，能够给用户提供更为友好的体验。")]),t._v(" "),v("li",[t._v("从服务商角度而言，优化能够减少页面请求数量、或者减小请求所占带宽，能够节省可观的资源。")])]),t._v(" "),v("h2",{attrs:{id:"怎么进行性能优化？能优化哪些内容？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#怎么进行性能优化？能优化哪些内容？"}},[t._v("#")]),t._v(" 怎么进行性能优化？能优化哪些内容？")]),t._v(" "),v("ul",[v("li",[t._v("主要优化目标\n"),v("ul",[v("li",[t._v("减少http请求数量")]),t._v(" "),v("li",[t._v("减少请求资源文件大小")])])]),t._v(" "),v("li",[t._v("优化具体手段\n"),v("ul",[v("li",[t._v("图片优化")]),t._v(" "),v("li",[t._v("压缩css/js/html资源")]),t._v(" "),v("li",[t._v("合并请求数量")]),t._v(" "),v("li",[t._v("...")])])])]),t._v(" "),v("h2",{attrs:{id:"图片性能优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#图片性能优化"}},[t._v("#")]),t._v(" 图片性能优化")]),t._v(" "),v("h3",{attrs:{id:"图片类型和特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#图片类型和特点"}},[t._v("#")]),t._v(" 图片类型和特点")]),t._v(" "),v("ol",[v("li",[t._v("jpg：有损压缩，不支持透明")]),t._v(" "),v("li",[t._v("png：无损压缩，支持透明\n"),v("ul",[v("li",[t._v("png8 - 2^8色 + 支持透明")]),t._v(" "),v("li",[t._v("png24 - 2^24色 + 不支持透明")]),t._v(" "),v("li",[t._v("png32 - 2^32色 + 支持透明")])])]),t._v(" "),v("li",[t._v("gif：动态图，无损压缩，支持透明")]),t._v(" "),v("li",[t._v("webp：谷歌推出，压缩程度更好，不支持透明")])]),t._v(" "),v("h3",{attrs:{id:"图片使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#图片使用场景"}},[t._v("#")]),t._v(" 图片使用场景")]),t._v(" "),v("ul",[v("li",[t._v("jpg -- 大部分不需要透明图片的业务场景")]),t._v(" "),v("li",[t._v("png -- 大部分需要透明图片的业务场景")]),t._v(" "),v("li",[t._v("webp -- 安卓/chrome全部不透明业务场景")]),t._v(" "),v("li",[t._v("gif -- 动态图业务场景")]),t._v(" "),v("li",[t._v("svg矢量图 -- 图片样式相对简单的业务场景")]),t._v(" "),v("li",[t._v("精灵/雪碧图 -- 小图颜色比较丰富")]),t._v(" "),v("li",[t._v("字体图标 -- 页面图标，颜色单一")]),t._v(" "),v("li",[t._v("base64 -- 用于12kb以下图片")])]),t._v(" "),v("h3",{attrs:{id:"优化措施"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化措施"}},[t._v("#")]),t._v(" 优化措施")]),t._v(" "),v("ul",[v("li",[t._v("css雪碧图/精灵图\n"),v("ul",[v("li",[t._v("过去将多个小图标合并到一 大图中， 现在使用较少")]),t._v(" "),v("li",[t._v("优点：减少请求数量")]),t._v(" "),v("li",[t._v("缺点：图片较大，加载速度变慢，如果没加载回来问题很严重")])])]),t._v(" "),v("li",[t._v("图片inline\n"),v("ul",[v("li",[t._v("以图片base64方式处理图片")]),t._v(" "),v("li",[t._v("优点：不用发送格外请求，随着html或者css文件的加载而加载。减少请求数量")]),t._v(" "),v("li",[t._v("缺点：大小会变大，所以不适用于很大的图片，一般8-13KB以下")]),t._v(" "),v("li",[t._v("适用于固定不变的小图")])])]),t._v(" "),v("li",[t._v("使用矢量图\n"),v("ul",[v("li",[t._v("使用svg标签")]),t._v(" "),v("li",[t._v("使用iconfont解决icon问题")]),t._v(" "),v("li",[t._v("优点：随着加载页面字体，加载好图片，请求数量较少")]),t._v(" "),v("li",[t._v("缺点：如果页面用不上字体，需要额外的开销加载字体图标")])])]),t._v(" "),v("li",[t._v("压缩图片\n"),v("ul",[v("li",[t._v("https://tinypng.com/ 在线压缩图片")])])])]),t._v(" "),v("h2",{attrs:{id:"浏览器实际工作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器实际工作"}},[t._v("#")]),t._v(" 浏览器实际工作")]),t._v(" "),v("ul",[v("li",[t._v("在渲染DOM的时候，浏览器所做的工作实际上是：\n"),v("ul",[v("li",[t._v("获取DOM后分割为多个图层\n"),v("ul",[v("li",[t._v("对每个图层的节点计算样式结果\t\t（Recalculate style--样式重计算）")]),t._v(" "),v("li",[t._v("为每个节点生成图形和位置\t\t\t（Layout--重排）")]),t._v(" "),v("li",[t._v("将每个节点绘制填充到图层位图中\t\t（Paint--重绘）")]),t._v(" "),v("li",[t._v("复合多个图层到页面上生成最终屏幕图像\t（Composite Layers--图层重组）")])])])])])]),t._v(" "),v("h2",{attrs:{id:"重绘-repaint"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#重绘-repaint"}},[t._v("#")]),t._v(" 重绘(Repaint)")]),t._v(" "),v("ul",[v("li",[t._v("重绘是一个元素外观的改变所触发的浏览器行为，例如改变outline、背景色等属性。")]),t._v(" "),v("li",[t._v("浏览器会根据元素的新属性重新绘制，使元素呈现新的外观。")]),t._v(" "),v("li",[t._v("重绘不会带来重新布局，所以并不一定伴随重排。")])]),t._v(" "),v("h2",{attrs:{id:"重排-reflow-回流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#重排-reflow-回流"}},[t._v("#")]),t._v(" 重排(Reflow 回流)")]),t._v(" "),v("ul",[v("li",[t._v("渲染对象在创建完成并添加到渲染树时，并不包含位置和大小信息。计算这些值的过程称为布局或重排")]),t._v(" "),v("li",[t._v('"重绘"不一定需要"重排"，比如改变某个网页元素的颜色，就只会触发"重绘"，不会触发"重排"，因为布局没有改变。')]),t._v(" "),v("li",[t._v('但是，"重排"必然导致"重绘"，比如改变一个网页元素的位置，就会同时触发"重排"和"重绘"，因为布局改变了。')])]),t._v(" "),v("h2",{attrs:{id:"触发重绘的属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#触发重绘的属性"}},[t._v("#")]),t._v(" 触发重绘的属性")]),t._v(" "),v("pre",[v("code",[t._v("* color        * background\t\t\t\t\t\t\t\t\t* outline-color\n* border-style\t\t\t\t\t\t* background-image\t\t\t\t\t\t\t\t* outline\n* border-radius\t\t\t\t\t\t* background-position\t\t\t\t\t\t\t* outline-style\n* visibility\t\t\t\t\t\t* background-repeat\t\t\t\t\t\t\t\t* outline-width\n* text-decoration\t\t\t\t\t* background-size\t\t\t\t\t\t\t  \t* box-shadow\n")])]),t._v(" "),v("h2",{attrs:{id:"触发重排-回流-的属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#触发重排-回流-的属性"}},[t._v("#")]),t._v(" 触发重排(回流)的属性")]),t._v(" "),v("pre",[v("code",[t._v("盒子模型相关属性会触发重布局\t\t\t定位属性及浮动也会触发重布局：\t\t\t\t改变节点内部文字结构也会触发重布局：\n\t\t* width\t\t\t\t\t\t\t    * top\t\t\t\t\t\t\t\t\t    * text-align\n\t\t* height\t\t\t\t\t\t    * bottom\t\t\t\t\t\t\t    \t* overflow-y\n\t\t* padding\t\t\t\t\t\t    * left\t\t\t\t\t\t\t\t    \t* font-weight\n\t\t* margin\t\t\t\t\t\t    * right\t\t\t\t\t\t\t\t    \t* overflow\n\t\t* display\t\t\t\t\t\t    * position\t\t\t\t\t\t    \t\t* font-family\n\t\t* border-width\t\t\t            * float\t\t\t\t\t\t\t\t    \t* line-height\n\t\t* border\t\t\t\t\t\t    * clear\t\t\t\t\t\t\t\t    \t* vertival-align\n\t\t* min-height\t\t\t\t        * white-space\n")])]),t._v(" "),v("h2",{attrs:{id:"常见的触发重排的操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见的触发重排的操作"}},[t._v("#")]),t._v(" 常见的触发重排的操作")]),t._v(" "),v("ul",[v("li",[t._v("Reflow 的成本比 Repaint 的成本高得多的多。DOM Tree 里的每个结点都会有 reflow 方法，")]),t._v(" "),v("li",[t._v("一个结点的 reflow 很有可能导致子结点，甚至父点以及同级结点的 reflow。在一些高性能的电脑上也许还没什么，")]),t._v(" "),v("li",[t._v("但是如果 reflow 发生在手机上，那么这个过程是非常痛苦和耗电的。")]),t._v(" "),v("li",[t._v("所以，下面这些动作有很大可能会是成本比较高的。\n"),v("ul",[v("li",[t._v("当你增加、删除、修改 DOM 结点时，会导致 Reflow , Repaint。")]),t._v(" "),v("li",[t._v("当你移动 DOM 的位置\n"),v("ul",[v("li",[t._v("当你修改 CSS 样式的时候。")]),t._v(" "),v("li",[t._v("当你 Resize 窗口的时候（移动端没有这个问题）")]),t._v(" "),v("li",[t._v("当你修改网页的默认字体时。")]),t._v(" "),v("li",[t._v("获取某些属性时(width,height...)")]),t._v(" "),v("li",[t._v("注：display:none 会触发 reflow，而 visibility:hidden 只会触发 repaint，因为没有发生位置变化。")])])])])])]),t._v(" "),v("h2",{attrs:{id:"优化手段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化手段"}},[t._v("#")]),t._v(" 优化手段")]),t._v(" "),v("ul",[v("li",[t._v("元素位置移动变换时尽量使用CSS3的transform来代替对top left等的操作")]),t._v(" "),v("li",[t._v("将多次改变样式属性的操作合并成一次操作\n"),v("ul",[v("li",[t._v("不要一条一条地修改DOM的样式，预先定义好class，然后修改DOM的className")])])]),t._v(" "),v("li",[t._v("将DOM离线后再修改\n"),v("ul",[v("li",[t._v("由于display属性为none的元素不在渲染树中，对隐藏的元素操作不会引发其他元素的重排。")]),t._v(" "),v("li",[t._v("如果要对一个元素进行复杂的操作时，可以先隐藏它，操作完成后再显示。这样只在隐藏和显示时触发2次重排。")])])]),t._v(" "),v("li",[t._v("不要把某些DOM节点的属性值放在一个循环里当成循环的变量\n"),v("ul",[v("li",[t._v("当你请求向浏览器请求一些 style信息的时候，就会让浏览器刷新队列，比如：\n"),v("ul",[v("li",[t._v("offsetTop, offsetLeft, offsetWidth, offsetHeight")]),t._v(" "),v("li",[t._v("scrollTop/Left/Width/Height")]),t._v(" "),v("li",[t._v("clientTop/Left/Width/Height")]),t._v(" "),v("li",[t._v("width,height")])])]),t._v(" "),v("li",[t._v("当你请求上面的一些属性的时候，浏览器为了给你最精确的值，需要刷新队列，")]),t._v(" "),v("li",[t._v("因为队列中可能会有影响到这些值的操作。即使你获取元素的布局和样式信息跟最近发生或改变的布局信息无关，浏览器都会强行刷新渲染队列。")])])]),t._v(" "),v("li",[t._v("动画实现过程中，启用GPU硬件加速\n"),v("ul",[v("li",[t._v("transform: translateZ(0)")])])]),t._v(" "),v("li",[t._v("利用文档碎片")]),t._v(" "),v("li",[t._v("不要使用table布局")])]),t._v(" "),v("h2",{attrs:{id:"window-requestanimationframe-domhighrestimestamp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#window-requestanimationframe-domhighrestimestamp"}},[t._v("#")]),t._v(" window.requestAnimationFrame(DOMHighResTimeStamp)")]),t._v(" "),v("ul",[v("li",[t._v("方法告诉浏览器您希望执行动画并请求浏览器在下一次重绘之前调用指定的函数来更新动画")]),t._v(" "),v("li",[t._v("该方法使用一个回调函数作为参数，这个回调函数会在浏览器重绘之前调用。")]),t._v(" "),v("li",[t._v("参数：DOMHighResTimeStamp，指示requestAnimationFrame() 开始触发回调函数的当前时间")]),t._v(" "),v("li",[t._v("返回值：\n"),v("ul",[v("li",[t._v("一个 long 整数，请求 ID ，是回调列表中唯一的标识。是个非零值，没别的意义。\n"),v("ul",[v("li",[t._v("你可以传这个值给 window.cancelAnimationFrame() 以取消回调函数。")])])])])]),t._v(" "),v("li",[t._v("取消方法：\n"),v("ul",[v("li",[t._v("window.cancelAnimationFrame(requestID)")]),t._v(" "),v("li",[t._v("requestID是先前调用window.requestAnimationFrame()方法时返回的ID.")])])])]),t._v(" "),v("h2",{attrs:{id:"_1、-浏览器渲染原理（浏览器是如何渲染的？）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、-浏览器渲染原理（浏览器是如何渲染的？）"}},[t._v("#")]),t._v(" 1、 浏览器渲染原理（浏览器是如何渲染的？）")]),t._v(" "),v("ul",[v("li",[t._v("遇到html标记，调用html解析器解析成DOM树")]),t._v(" "),v("li",[t._v("遇到CSS标记，调用css解析器解析CSSOM树")]),t._v(" "),v("li",[t._v("遇到js标记,调用js引擎解析其中的代码\n"),v("ul",[v("li",[t._v("可能会修改html、css")]),t._v(" "),v("li",[t._v("重新调用html、CSS解析器重新解析，分别构建dom树、cssom树")])])]),t._v(" "),v("li",[t._v("将DOM树和CSSOM树合并成render树")]),t._v(" "),v("li",[t._v("布局（计算元素大小和位置）")]),t._v(" "),v("li",[t._v("渲染（颜色）")])]),t._v(" "),v("h2",{attrs:{id:"_2、-请写出图片懒加载方案（只要js部分）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、-请写出图片懒加载方案（只要js部分）"}},[t._v("#")]),t._v(" 2、 请写出图片懒加载方案（只要js部分）")]),t._v(" "),v("ul",[v("li",[t._v("当图片出现在可视区域内才加载，默认loading图")])]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("<img src='loading.jpg' data-src='xxx.jpg' class='lazy-loading'>\n\nconst viewHeight = document.documentElement.clientHeight;\n\nfunction lazyLoading() {\n const imgs = document.querySelectorAll('.lazy-loading');\n\n imgs.forEach(function (item) {\n  const { top } = item.getBoundingClientRect();\n\n  if (top <= viewHeight) {\n   const imgSrc = item.dataset.src;\n   const image = new Image();\n   image.src = imgSrc;\n   image.onload = function () {\n    item.src = imgSrc;\n    item.className = '';\n    item.removeAttribute('data-src');\n   }\n\n  }\n })\n\n\n}\n\n")])])]),v("h2",{attrs:{id:"_3、-有哪些图片用法？分别用于什么场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、-有哪些图片用法？分别用于什么场景"}},[t._v("#")]),t._v(" 3、 有哪些图片用法？分别用于什么场景")]),t._v(" "),v("ul",[v("li",[t._v("jpg 不透明图片")]),t._v(" "),v("li",[t._v("png 透明图片")]),t._v(" "),v("li",[t._v("gif 动态图")]),t._v(" "),v("li",[t._v("webp 安卓和chrome的不透明图片\n"),v("ul",[v("li",[t._v("一般大一些的图，如果图片较小，还是用jpg")])])]),t._v(" "),v("li",[t._v("精灵图\n"),v("ul",[v("li",[t._v("色彩丰富小图")])])]),t._v(" "),v("li",[t._v("矢量图/svg\n"),v("ul",[v("li",[t._v("缩放图片")])])]),t._v(" "),v("li",[t._v("base64\n"),v("ul",[v("li",[t._v("其他小图，小于8-13kb左右")])])]),t._v(" "),v("li",[t._v("字体图标\n"),v("ul",[v("li",[t._v("色彩单一小图")])])])]),t._v(" "),v("h2",{attrs:{id:"_4、-请列举减少重排、重绘的措施"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、-请列举减少重排、重绘的措施"}},[t._v("#")]),t._v(" 4、 请列举减少重排、重绘的措施")]),t._v(" "),v("ul",[v("li",[t._v("不要重复读取元素宽、高等属性，会触发重绘重排，应该先缓存在使用")]),t._v(" "),v("li",[t._v("将多次的dom操作合并成一次\n"),v("ul",[v("li",[t._v("用class操作样式")])])]),t._v(" "),v("li",[t._v("用css3的tansform取代left、top")]),t._v(" "),v("li",[t._v("visibility 比 其他方法更好，只会触发重绘")])]),t._v(" "),v("h2",{attrs:{id:"_5、-实现跨页面通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5、-实现跨页面通信"}},[t._v("#")]),t._v(" 5、 实现跨页面通信")]),t._v(" "),v("ul",[v("li",[t._v("webStorage\n"),v("ul",[v("li",[t._v("sessionStorage")])])]),t._v(" "),v("li",[t._v("localStorage")]),t._v(" "),v("li",[t._v("A页面绑定storage事件")]),t._v(" "),v("li",[t._v("B页面使用Storage修改、添加、删除存储的内容，只要做了，A页面会立即触发storage事件，从而在事件中能获取到B页面操作的值")])]),t._v(" "),v("p",[t._v("性能优化："),v("a",{attrs:{href:"https://csspod.com/frontend-performance-best-practices/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://csspod.com/frontend-performance-best-practices/"),v("OutboundLink")],1),t._v("\n雅虎35条军规")])])}),[],!1,null,null,null);i.default=l.exports}}]);
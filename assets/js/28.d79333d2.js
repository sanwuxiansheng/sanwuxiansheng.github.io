(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{222:function(t,e,n){"use strict";n.r(e);var l=n(0),s=Object(l.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mescroll-js的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mescroll-js的使用"}},[t._v("#")]),t._v(" mescroll.js的使用")]),t._v(" "),n("h2",{attrs:{id:"mescroll官网：http-www-mescroll-com"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mescroll官网：http-www-mescroll-com"}},[t._v("#")]),t._v(" mescroll官网：http://www.mescroll.com")]),t._v(" "),n("h2",{attrs:{id:"_1-npm-安装mescroll"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-npm-安装mescroll"}},[t._v("#")]),t._v(" 1. npm 安装mescroll")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    npm install  --save mescroll.js\n")])])]),n("h2",{attrs:{id:"_2-如果之前-vue项目初始化-是用cnpm需要"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-如果之前-vue项目初始化-是用cnpm需要"}},[t._v("#")]),t._v(" 2.如果之前 vue项目初始化 是用cnpm需要")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("1>：卸载 npm uninstall webpack-dev-server，")])]),t._v(" "),n("li",[n("p",[t._v("2>：再安装这个npm i webpack-dev-server@2.9.7")])]),t._v(" "),n("li",[n("p",[t._v("运行命令是：")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  npm run dev\n")])])]),n("h2",{attrs:{id:"_3-在页面中引入mescroll，"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-在页面中引入mescroll，"}},[t._v("#")]),t._v(" 3.在页面中引入mescroll，")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import MeScroll from 'mescroll.js'\n\nimport 'mescroll.js/mescroll.min.css'\n")])])]),n("h2",{attrs:{id:"_4-vue单文件示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue单文件示例"}},[t._v("#")]),t._v(" 4. vue单文件示例 :")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\t\t\t<template>\n\t\t\t  <div>\n\t\t\t    \x3c!--mescroll滚动区域的基本结构,为避免id重复导致的多次初始化,这里使用ref--\x3e\n\t\t\t     <div ref="mescroll" class="mescroll">\n\t\t\t      <div>\n\t\t\t      \x3c!--内容...--\x3e\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t</template>\n\t\t\t\n\t\t\t<script>\n\t\t\t//引入mescroll.min.js和mescroll.min.css\n\t\t\timport MeScroll from \'mescroll.js\'\n\t\t\timport \'mescroll.js/mescroll.min.css\'\n\t\t\t\n\t\t\texport default {\n\t\t\t  name: \'xxx\',\n\t\t\t  data() {\n\t\t\t    return {\n\t\t\t      mescroll: null, //mescroll实例对象\n\t\t\t      dataList:[] //列表数据\n\t\t\t    }\n\t\t\t  },\n\t\t\t  mounted: function () {\n\t\t\t    //创建MeScroll对象\n\t\t\t    this.mescroll = new MeScroll(this.$refs.mescroll, { //在mounted初始化mescroll,确保此处配置的ref有值\n\t\t\t    \t// down:{}, //下拉刷新的配置. (如果下拉刷新和上拉加载处理的逻辑是一样的,则down可不用写了)\n\t\t\t      up: {\n\t\t\t        callback: this.upCallback,\n\t\t        \t// 以下是一些常用的配置,当然不写也可以的.\n\t\t\t\tpage: {\n\t\t\t\t\tnum: 0, //当前页 默认0,回调之前会加1; 即callback(page)会从1开始\n\t\t\t\t\tsize: 10, //每页数据条数,默认10\n\t\t\t\t},\n\t\t\t\thtmlNodata: \'<p class="upwarp-nodata">-- END --</p>\',\n\t\t\t\tnoMoreSize: 5, //如果列表已无数据,可设置列表的总数量要大于5才显示无更多数据;\n\t\t\t\t\t\t\t避免列表数据过少(比如只有一条数据),显示无更多数据会不好看\n\t\t\t\ttoTop: {\n\t\t\t\t\t//回到顶部按钮\n\t\t\t\t\tsrc: "./static/mescroll/mescroll-totop.png", //图片路径,默认null,支持网络图\n\t\t\t\t\toffset: 1000, //列表滚动1000px才显示回到顶部按钮\n\t\t\t\t},\n\t\t\t\tempty: {\n\t\t\t\t\t//列表第一页无任何数据时,显示的空提示布局; 需配置warpId才显示\n\t\t\t\t\twarpId:\t"xxid", //父布局的id (1.3.5版本支持传入dom元素)\n\t\t\t\t\ticon: "./static/mescroll/mescroll-empty.png", //图标,默认null,支持网络图\n\t\t\t\t\ttip: "暂无相关数据~", //提示\n\t\t\t\t}\n\t\t\t      }\n\t\t\t    });\n\t\t\t  },\n\t\t\t  methods: {\n\t\t\t    //上拉回调 page = {num:1, size:10}; num:当前页 ,默认从1开始; size:每页数据条数,默认10\n\t\t\t    upCallback(page) {\n\t\t\t      //联网请求\n\t\t\t      axios.get("xxxxxx", {\n\t\t\t        params: {\n\t\t\t          num: page.num, //页码\n\t\t\t          size: page.size //每页长度\n\t\t\t        }\n\t\t\t      }).then((response)=> {\n\t\t\t        //请求的列表数据\n\t\t\t        let arr = response.data;\n\t\t\t        //如果是第一页需手动置空列表\n\t\t\t        if (page.num == 1) this.dataList = [];\n\t\t\t        //把请求到的数据添加到列表\n\t\t\t        this.dataList = this.dataList.concat(arr);\n\t\t\t        //数据渲染成功后,隐藏下拉刷新的状态\n\t\t\t        this.$nextTick(() => {\n\t\t\t          this.mescroll.endSuccess(arr.length);\n\t\t\t        })\n\t\t\t      }).catch((e)=> {\n\t\t\t        //联网失败的回调,隐藏下拉刷新和上拉加载的状态;\n\t\t\t        this.mescroll.endErr();\n\t\t\t      })\n\t\t\t    }\n\t\t\t  },\n\t\t\t  // 进入路由时,恢复列表状态\n\t\t\t  beforeRouteEnter (to, from, next) {  // 如果没有配置回到顶部按钮或isBounce,则beforeRouteEnter不用写\n\t\t\t    next(vm => {\n\t\t\t      if (vm.mescroll) {\n\t\t\t      \t// 恢复到之前设置的isBounce状态\n\t\t\t        if (vm.mescroll.lastBounce != null) vm.mescroll.setBounce(vm.mescroll.lastBounce)\n\t\t\t        // 滚动到之前列表的位置 (注意:路由使用keep-alive才生效)\n\t\t\t        if (vm.mescroll.lastScrollTop) {\n\t\t\t          vm.mescroll.setScrollTop(vm.mescroll.lastScrollTop)\n\t\t\t          setTimeout(() => { // 需延时,因为setScrollTop内部会触发onScroll,可能会渐显回到顶部按钮\n\t\t\t            vm.mescroll.setTopBtnFadeDuration(0)// 设置回到顶部按钮显示时无渐显动画\n\t\t\t          }, 16)\n\t\t\t        }\n\t\t\t      }\n\t\t\t    })\n\t\t\t  },\n\t\t\t  // 离开路由时,记录列表状态\n\t\t\t  beforeRouteLeave (to, from, next) {  // 如果没有配置回到顶部按钮或isBounce,则beforeRouteLeave不用写\n\t\t\t    if (this.mescroll) {\n\t\t\t      this.mescroll.lastBounce = this.mescroll.optUp.isBounce// 记录当前是否禁止ios回弹\n\t\t\t      this.mescroll.setBounce(true) // 允许bounce\n\t\t\t      this.mescroll.lastScrollTop = this.mescroll.getScrollTop()// 记录当前滚动条的位置\n\t\t\t      this.mescroll.hideTopBtn(0)// 隐藏回到顶部按钮,无渐隐动画\n\t\t\t    }\n\t\t\t    next()\n\t\t\t  }\n\t\t\t}\n\t\t\t<\/script>\n\t\t\t\n\t\t\t<style scoped>\n\t\t\t  /*通过fixed固定mescroll的高度*/\n\t\t\t  .mescroll {\n\t\t\t    position: fixed;\n\t\t\t    top: 44px;\n\t\t\t    bottom: 0;\n\t\t\t    height: auto;\n\t\t\t  }\n\t\t\t</style>\n')])])]),n("ul",[n("li",[t._v("以上写法有些繁琐,在 vue 中强烈建议使用mescroll组件,简单快捷 :")])]),t._v(" "),n("h2",{attrs:{id:"mescroll组件使用步骤-至少更新到1-3-5版本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mescroll组件使用步骤-至少更新到1-3-5版本"}},[t._v("#")]),t._v(" mescroll组件使用步骤 (至少更新到1.3.5版本):")]),t._v(" "),n("pre",[n("code",[t._v("1. 执行npm命令安装mescroll :   npm install --save mescroll.js\n\n2. 引入mescroll组件 :   import MescrollVue from 'mescroll.js/mescroll.vue'\n\n3. vue单文件示例 :\n")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\t\t\t<template>\n\t\t\t  <div>\n\t\t\t    \x3c!--mescroll滚动区域的基本结构--\x3e\n\t\t\t    <mescroll-vue ref="mescroll" :down="mescrollDown" :up="mescrollUp" @init="mescrollInit">\n\t\t\t      \x3c!--内容...--\x3e\n\t\t\t    </mescroll-vue>\n\t\t\t  </div>\n\t\t\t</template>\n\t\t\t\n\t\t\t<script>\n\t\t\t// 引入mescroll的vue组件\n\t\t\timport MescrollVue from \'mescroll.js/mescroll.vue\'\n\t\t\t\n\t\t\texport default {\n\t\t\t  name: \'xxx\',\n\t\t\t  components: {\n\t\t\t    MescrollVue // 注册mescroll组件\n\t\t\t  },\n\t\t\t  data () {\n\t\t\t    return {\n\t\t\t      mescroll: null, // mescroll实例对象\n\t\t\t      mescrollDown:{}, //下拉刷新的配置. (如果下拉刷新和上拉加载处理的逻辑是一样的,则mescrollDown可不用写了)\n\t\t\t      mescrollUp: { // 上拉加载的配置.\n\t\t\t        callback: this.upCallback, // 上拉回调,此处简写; 相当于 callback: function(page, mescroll) { }\n\t\t\t        //以下是一些常用的配置,当然不写也可以的.\n\t\t\t\tpage: {\n\t\t\t\t\tnum: 0, //当前页 默认0,回调之前会加1; 即callback(page)会从1开始\n\t\t\t\t\tsize: 10 //每页数据条数,默认10\n\t\t\t\t},\n\t\t\t\thtmlNodata: \'<p class="upwarp-nodata">-- END --</p>\',\n\t\t\t\tnoMoreSize: 5, //如果列表已无数据,可设置列表的总数量要大于5才显示无更多数据;\n\t\t\t\t\t\t\t避免列表数据过少(比如只有一条数据),显示无更多数据会不好看\n\t\t\t\t\t\t\t这就是为什么无更多数据有时候不显示的原因\n\t\t\t\ttoTop: {\n\t\t\t\t\t//回到顶部按钮\n\t\t\t\t\tsrc: "./static/mescroll/mescroll-totop.png", //图片路径,默认null,支持网络图\n\t\t\t\t\toffset: 1000 //列表滚动1000px才显示回到顶部按钮\n\t\t\t\t},\n\t\t\t\tempty: {\n\t\t\t\t\t//列表第一页无任何数据时,显示的空提示布局; 需配置warpId才显示\n\t\t\t\t\twarpId: "xxid", //父布局的id (1.3.5版本支持传入dom元素)\n\t\t\t\t\ticon: "./static/mescroll/mescroll-empty.png", //图标,默认null,支持网络图\n\t\t\t\t\ttip: "暂无相关数据~" //提示\n\t\t\t\t}\n\t\t\t      },\n\t\t\t      dataList: [] // 列表数据\n\t\t\t    }\n\t\t\t  },\n\t\t\t  beforeRouteEnter (to, from, next) { // 如果没有配置回到顶部按钮或isBounce,则beforeRouteEnter不用写\n\t\t\t    next(vm => {\n\t\t\t       // 找到当前mescroll的ref,调用子组件mescroll-vue的beforeRouteEnter方法\n\t\t\t      vm.$refs.mescroll && vm.$refs.mescroll.beforeRouteEnter() // 进入路由时,滚动到原来的列表位置,恢复回到顶部按钮和isBounce的配置\n\t\t\t    })\n\t\t\t  },\n\t\t\t  beforeRouteLeave (to, from, next) { // 如果没有配置回到顶部按钮或isBounce,则beforeRouteLeave不用写\n\t\t\t     // 找到当前mescroll的ref,调用子组件mescroll-vue的beforeRouteLeave方法\n\t\t\t    this.$refs.mescroll && this.$refs.mescroll.beforeRouteLeave() // 退出路由时,记录列表滚动的位置,隐藏回到顶部按钮和isBounce的配置\n\t\t\t    next()\n\t\t\t  },\n\t\t\t  methods: {\n\t\t\t    // mescroll组件初始化的回调,可获取到mescroll对象\n\t\t\t    mescrollInit (mescroll) {\n\t\t\t      this.mescroll = mescroll  // 如果this.mescroll对象没有使用到,则mescrollInit可以不用配置\n\t\t\t    },\n\t\t\t    // 上拉回调 page = {num:1, size:10}; num:当前页 ,默认从1开始; size:每页数据条数,默认10\n\t\t\t    upCallback (page, mescroll) {\n\t\t\t      // 联网请求\n\t\t\t      axios.get(\'xxxxxx\', {\n\t\t\t        params: {\n\t\t\t          num: page.num, // 页码\n\t\t\t          size: page.size // 每页长度\n\t\t\t        }\n\t\t\t      }).then((response) => {\n\t\t\t        // 请求的列表数据\n\t\t\t        let arr = response.data\n\t\t\t        // 如果是第一页需手动置空列表\n\t\t\t        if (page.num === 1) this.dataList = []\n\t\t\t        // 把请求到的数据添加到列表\n\t\t\t        this.dataList = this.dataList.concat(arr)\n\t\t\t        // 数据渲染成功后,隐藏下拉刷新的状态\n\t\t\t        this.$nextTick(() => {\n\t\t\t          mescroll.endSuccess(arr.length)\n\t\t\t        })\n\t\t\t      }).catch((e) => {\n\t\t\t        // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\n\t\t\t        mescroll.endErr()\n\t\t\t      })\n\t\t\t    }\n\t\t\t  }\n\t\t\t}\n\t\t\t<\/script>\n\t\t\t\n\t\t\t<style scoped>\n\t\t\t  /*通过fixed固定mescroll的高度*/\n\t\t\t  .mescroll {\n\t\t\t    position: fixed;\n\t\t\t    top: 44px;\n\t\t\t    bottom: 0;\n\t\t\t    height: auto;\n\t\t\t  }\n\t\t\t</style>\n')])])]),n("ul",[n("li",[t._v("相关参数和api可查看mescroll官网：http://www.mescroll.com")])])])}),[],!1,null,null,null);e.default=s.exports}}]);
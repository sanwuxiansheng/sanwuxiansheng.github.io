(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{210:function(t,e,r){"use strict";r.r(e);var a=r(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"react-router"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-router"}},[t._v("#")]),t._v(" React-router")]),t._v(" "),r("h2",{attrs:{id:"_1-理解react-router"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-理解react-router"}},[t._v("#")]),t._v(" 1. 理解react-router")]),t._v(" "),r("pre",[r("code",[t._v("react的一个插件库\n专门用来实现一个SPA应用\n基于react的项目基本都会用到此库\n")])]),t._v(" "),r("h2",{attrs:{id:"_2-几个重要问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-几个重要问题"}},[t._v("#")]),t._v(" 2. 几个重要问题")]),t._v(" "),r("h3",{attrs:{id:"_1-spa应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-spa应用"}},[t._v("#")]),t._v(" 1). SPA应用")]),t._v(" "),r("pre",[r("code",[t._v("单页Web应用（single page web application，SPA）\n整个应用只有一个完整的页面\n点击页面中的链接不会刷新页面, 本身也不会向服务器发请求\n当点击链接时, 只会做页面的局部更新\n数据都需要通过ajax请求获取, 并在前端异步展现\n")])]),t._v(" "),r("h3",{attrs:{id:"_2-路由"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-路由"}},[t._v("#")]),t._v(" 2). 路由")]),t._v(" "),r("pre",[r("code",[t._v('1. 什么是路由?\n\t一个路由就是一个映射关系(key:value)\n\tkey为路由路径, value可能是function/component\n2. 路由分类\n\t后台路由: node服务器端路由, value是function, 用来处理客户端提交的请求并返回一个响应数据\n\t前台路由: 浏览器端路由, value是component, 当请求的是路由path时, 浏览器端前没有发送http请求, 但界面会更新显示对应的组件 \n3. 后台路由\n\t* 注册路由: router.get(path, function(req, res))\n\t* 当node接收到一个请求时, 根据请求路径找到匹配的路由, 调用路由中的函数来处理请求, 返回响应数据\n* 前端路由\n\t* 注册路由: <Route path="/about" component={About}>\n\t* 当浏览器的hash变为#about时, 当前路由组件就会变为About组件\n')])]),t._v(" "),r("h3",{attrs:{id:"_3-关于url中的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-关于url中的"}},[t._v("#")]),t._v(" 3). 关于url中的#")]),t._v(" "),r("pre",[r("code",[t._v("1. 理解#\n\t'#'代表网页中的一个位置。其右面的字符，就是该位置的标识符\n\t改变#不触发网页重载\n\t改变#会改变浏览器的访问历史\n2. 操作#\n\twindow.location.hash读取#值\n\twindow.onhashchange = func 监听hash改变\n3. 学习资源: \n\t阮一峰教程: http://www.ruanyifeng.com/blog/2011/03/url_hash.html\n")])]),t._v(" "),r("h2",{attrs:{id:"_3-react-router的学习资源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-react-router的学习资源"}},[t._v("#")]),t._v(" 3. react-router的学习资源")]),t._v(" "),r("pre",[r("code",[t._v("github主页: https://github.com/ReactTraining/react-router\n官网教程: https://github.com/reactjs/react-router-tutorial\n阮一峰教程: http://www.ruanyifeng.com/blog/2016/05/react_router.html\n")])]),t._v(" "),r("h2",{attrs:{id:"_4-相关api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-相关api"}},[t._v("#")]),t._v(" 4. 相关API")]),t._v(" "),r("h3",{attrs:{id:"_1-react-router中的相关组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-react-router中的相关组件"}},[t._v("#")]),t._v(" 1). react-router中的相关组件:")]),t._v(" "),r("pre",[r("code",[t._v("Router: 路由器组件, 用来包含各个路由组件\nRoute: 路由组件, 注册路由 \nIndexRoute: 默认子路由组件\nhashHistory: 路由的切换由URL的hash变化决定，即URL的#部分发生变化\nLink: 路由链接组件\n")])]),t._v(" "),r("h3",{attrs:{id:"_2-router-路由器组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-router-路由器组件"}},[t._v("#")]),t._v(" 2). Router: 路由器组件")]),t._v(" "),r("pre",[r("code",[t._v("属性:  history={hashHistory} 用来监听浏览器地址栏的变化, 并将URL解析成一个地址对象，供React Router匹配\n子组件: Route\n")])]),t._v(" "),r("h3",{attrs:{id:"_3-route-路由组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-route-路由组件"}},[t._v("#")]),t._v(" 3). Route: 路由组件")]),t._v(" "),r("pre",[r("code",[t._v('属性1: path="/xxx"  \n属性2: component={Xxx}\n根路由组件: path="/"的组件, 一般为App\n子路由组件: 子<Route>配置的组件\n')])]),t._v(" "),r("h3",{attrs:{id:"_4-indexroute-默认路由"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-indexroute-默认路由"}},[t._v("#")]),t._v(" 4). IndexRoute: 默认路由")]),t._v(" "),r("pre",[r("code",[t._v("当父路由被请求时, 默认就会请求此路由组件\n")])]),t._v(" "),r("h3",{attrs:{id:"_5-hashhistory"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-hashhistory"}},[t._v("#")]),t._v(" 5). hashHistory")]),t._v(" "),r("pre",[r("code",[t._v("用于Router组件的history属性\n作用: 为地址url生成?_k=hash, 用于内部保存对应的state\n")])]),t._v(" "),r("h3",{attrs:{id:"_6-link-路由链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-link-路由链接"}},[t._v("#")]),t._v(" 6). Link: 路由链接")]),t._v(" "),r("pre",[r("code",[t._v('属性1: to="/xxx"\n属性2: activeClassName="active"\n')])]),t._v(" "),r("h2",{attrs:{id:"_5-react-router的基本使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-react-router的基本使用"}},[t._v("#")]),t._v(" 5. react-router的基本使用")]),t._v(" "),r("h3",{attrs:{id:"_1-下载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-下载"}},[t._v("#")]),t._v(" 1). 下载")]),t._v(" "),r("pre",[r("code",[t._v("npm install react-router --save\n")])]),t._v(" "),r("h3",{attrs:{id:"_2-定义各个路由组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-定义各个路由组件"}},[t._v("#")]),t._v(" 2). 定义各个路由组件")]),t._v(" "),r("pre",[r("code",[t._v("1. About.js\n  import React from 'react'\n  function About() {\n    return <div>About组件内容</div>\n  }\n  export default About\n2. Home.js\n  import React from 'react'\n  function Home() {\n    return <div>Home组件内容2</div>\n  }\n  export default Home\n3. Repos.js\n  import React, {Component} from 'react'\n  export default class Repos extends Component {\n    render() {\n      return (\n        <div>Repos组件</div>\n      )\n    }\n  }\n4. App.js\nimport React, {Component} from 'react'\nimport {Link} from 'react-router'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Hello, React Router!</h2>\n        <ul>\n          <li><Link to=\"/about\" activeClassName=\"active\">About2</Link></li>\n          <li><Link to=\"/repos\" activeClassName=\"active\">Repos2</Link></li>\n        </ul>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n")])]),t._v(" "),r("h3",{attrs:{id:"_3-index-js-注册路由-渲染路由器标签"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-index-js-注册路由-渲染路由器标签"}},[t._v("#")]),t._v(" 3). index.js: 注册路由, 渲染路由器标签")]),t._v(" "),r("pre",[r("code",[t._v("import React from 'react'\nimport {render} from 'react-dom'\nimport {Router, Route, IndexRoute, hashHistory} from 'react-router'\nimport App from './modules/App'\nimport About from './modules/About'\nimport Repos from './modules/Repos'\nimport Home from './modules/Home'\n\nrender((\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={App}>\n      <IndexRoute component={Home}/>\n      <Route path=\"/about\" component={About}></Route>\n      <Route path=\"/repos\" component={Repos}></Route>\n    </Route>\n  </Router>\n), document.getElementById('app'))\n")])]),t._v(" "),r("h3",{attrs:{id:"_4-主页面-index-html"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-主页面-index-html"}},[t._v("#")]),t._v(" 4). 主页面: index.html")]),t._v(" "),r("pre",[r("code",[t._v("<style>\n  .active {\n    color: red;\n  }\n</style>\n")])]),t._v(" "),r("h2",{attrs:{id:"_6-向路由组件传递请求参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-向路由组件传递请求参数"}},[t._v("#")]),t._v(" 6. 向路由组件传递请求参数")]),t._v(" "),r("h3",{attrs:{id:"_1-repo-js-repos组件下的分路由组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-repo-js-repos组件下的分路由组件"}},[t._v("#")]),t._v(" 1). repo.js: repos组件下的分路由组件")]),t._v(" "),r("pre",[r("code",[t._v("import React from 'react'\nexport default function ({params}) {\n  let {username, repoName} = params\n  return (\n    <div>用户名:{username}, 仓库名:{repoName}</div>\n  )\n}\n")])]),t._v(" "),r("h3",{attrs:{id:"_2-repos-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-repos-js"}},[t._v("#")]),t._v(" 2). repos.js")]),t._v(" "),r("pre",[r("code",[t._v("import React from 'react'\nimport NavLink from './NavLink'\n\nexport default class Repos extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [\n        {username: 'faceback', repoName: 'react'},\n        {username: 'faceback', repoName: 'react-router'},\n        {username: 'Angular', repoName: 'angular'},\n        {username: 'Angular', repoName: 'angular-cli'}\n      ]\n    };\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleSubmit () {\n\n    const repos = this.state.repos\n    repos.push({\n      username: this.refs.username.value,\n      repoName: this.refs.repoName.value\n    })\n    this.setState({repos})\n    this.refs.username.value = ''\n    this.refs.repoName.value = ''\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Repos</h2>\n        <ul>\n          {\n            this.state.repos.map((repo, index) => {\n              const to = `/repos/${repo.username}/${repo.repoName}`\n              return (\n                <li key={index}>\n                  <Link to={to} activeClassName='active'>{repo.repoName}</Link>\n                </li>\n              )\n            })\n          }\n          <li>\n            <form onSubmit={this.handleSubmit}>\n              <input type=\"text\" placeholder=\"用户名\" ref='username'/> / {' '}\n              <input type=\"text\" placeholder=\"仓库名\" ref='repoName'/>{' '}\n              <button type=\"submit\">添加</button>\n            </form>\n          </li>\n        </ul>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n")])]),t._v(" "),r("h3",{attrs:{id:"_3-index-js-配置路由"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-index-js-配置路由"}},[t._v("#")]),t._v(" 3). index.js: 配置路由")]),t._v(" "),r("pre",[r("code",[t._v('<Route path="/repos" component={Repos}>\n  <Route path="/repos/:username/:repoName" component={Repo}/>\n</Route>\n')])]),t._v(" "),r("h2",{attrs:{id:"_7-优化link组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-优化link组件"}},[t._v("#")]),t._v(" 7. 优化Link组件")]),t._v(" "),r("h3",{attrs:{id:"_1-navlink-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-navlink-js"}},[t._v("#")]),t._v(" 1). NavLink.js")]),t._v(" "),r("pre",[r("code",[t._v("import React from 'react'\nimport {Link} from 'react-router'\nexport default function NavLink(props) {\n  return <Link {...props} activeClassName=\"active\"/>\n}\n")])]),t._v(" "),r("h3",{attrs:{id:"_2-repos-js-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-repos-js-2"}},[t._v("#")]),t._v(" 2). Repos.js")]),t._v(" "),r("pre",[r("code",[t._v("<NavLink to={to}>{repo.repoName}</NavLink>")])])])}),[],!1,null,null,null);e.default=n.exports}}]);
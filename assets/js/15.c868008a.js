(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{212:function(n,e,a){"use strict";a.r(e);var t=a(0),s=Object(t.a)({},(function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[n._v("#")]),n._v(" ajax")]),n._v(" "),a("h2",{attrs:{id:"_1、原生的ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、原生的ajax"}},[n._v("#")]),n._v(" 1、原生的ajax")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("//服务器代码\nconst express = require('express');\nconst app = express();\n//设置内置中间件，暴露服务器的静态资源\napp.use(express.static('public'));\napp.use(express.urlencoded({extended: true}));\napp.get('/ajax', (req, res) => {\n  console.log('服务器收到了请求~');\n  console.log(req.query);\n  res.send('这是服务器返回的响应~');\n});\napp.post('/ajax', (req, res) => {\n  console.log('服务器收到了请求~');\n  console.log(req.body);\n})\napp.listen(3000, (err) => {\n  if (!err) console.log('服务器启动成功了~');\n  else console.log(err);\n});\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("//页面代码\n<body>\n<button id=\"btn\">按钮</button>\n<script type=\"text/javascript\">\n  document.getElementById('btn').onclick = function () {\n    //创建xhr实例对象\n    const xhr = new XMLHttpRequest();\n    //绑定事件监听，用来接收响应\n    //当readystate的值发生改变就会触发该函数\n    /*\n      readystate的值\n        0：open方法还未调用。 刚刚创建xhr对象，初始化状态为0\n        1：send方法还未调用。（请求还没有发送，还可以设置请求信息）\n        2：send方法已经调用。（已经发送了请求，接收到了部分响应数据：响应首行、响应头）\n        3：接收到了部分响应体数据。（如果响应数据较小，就全部接收完毕。若果较大，就只接受到一部分）\n        4：接收到了全部响应体数据。\n\n    */\n    xhr.readystatechange = function () {\n      const read = xhr.readyState;\n      // console.log(read);\n      // if (read === 1) {\n      //   console.log('值为1');\n      // };\n      // if (read === 2) {\n      //   console.log('值为1');\n      // };\n      // if (read === 3) {\n      //   console.log('值为1');\n      // };\n      // if (read === 4) {\n      //   console.log('值为1');\n      // };\n      if (read === 4 && xhr.status === 200) {\n        console.log('全部数据接收成功');\n      }\n    };\n    //设置请求信息: 请求方式 请求地址 请求参数\n    //get方式\n    // xhr.open('GET', 'http://localhost:3000/ajax?username=jack&age=18');\n    // xhr.setRequestHeader('123', '123456');\n    //发送请求\n    // xhr.send();\n    //post方式\n    xhr.open('POST', 'http://localhost:3000/ajax?username=jack&age=18');\n    xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded',false);\n    //发送请求\n    xhr.send('username=jack&age=18');\n    console.log('代码执行完了');\n  }\n<\/script>\n</body>\n")])])]),a("h2",{attrs:{id:"_2、readystate有多少，分别代表什么含义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、readystate有多少，分别代表什么含义"}},[n._v("#")]),n._v(" 2、readyState有多少，分别代表什么含义")]),n._v(" "),a("ul",[a("li",[n._v("readystate的值\n"),a("ul",[a("li",[n._v("0：open方法还未调用。 刚刚创建xhr对象，初始化状态为0")]),n._v(" "),a("li",[n._v("1：send方法还未调用。（请求还没有发送，还可以设置请求信息）")]),n._v(" "),a("li",[n._v("2：send方法已经调用。（已经发送了请求，接收到了部分响应数据：响应首行、响应头）")]),n._v(" "),a("li",[n._v("3：接收到了部分响应体数据。（如果响应数据较小，就全部接收完毕。若果较大，就只接受到一部分）")]),n._v(" "),a("li",[n._v("4：接收到了全部响应体数据。")])])])]),n._v(" "),a("h2",{attrs:{id:"_3、get请求存在什么问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、get请求存在什么问题"}},[n._v("#")]),n._v(" 3、get请求存在什么问题")]),n._v(" "),a("ul",[a("li",[n._v("get请求：\n"),a("ul",[a("li",[n._v("chrome/firefox  第二次以后请求会缓存（类似于协商缓存，会访问服务器，再走缓存）")]),n._v(" "),a("li",[n._v("ie 第二次以后请求会缓存（类似于强制缓存，不会访问服务器，直接走缓存）\n"),a("ul",[a("li",[n._v("ie导致问题：如果后台数据更新了，ie因为没有访问服务器，所以拿不到最新的数据")]),n._v(" "),a("li",[n._v("解决：让每次请求不一样。 在请求参数加上随机数或时间戳。 浏览器就不会缓存get请求，就能得到最新的数据")])])])])])]),n._v(" "),a("h2",{attrs:{id:"_4、jquery中ajax的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、jquery中ajax的使用"}},[n._v("#")]),n._v(" 4、jquery中ajax的使用")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<body>\n<button id=\"btn\">按钮</button>\n<script type=\"text/javascript\" src=\"https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js\"><\/script>\n<script type=\"text/javascript\">\n  // 使用jquery发送ajax请求\n  $('#btn').click(function () {\n      /* $.ajax('/ajax', {\n         method: 'GET', // 请求方式\n         data: {  // 请求参数\n           name: 'jack',\n           age: 18\n         },\n         headers: { // 请求头\n           xxx: 'xxxxx'\n         },\n         success: function (data) { // 成功的回调函数\n           console.log(data);\n         },\n         error: function (error) { // 失败的回调函数\n           console.log(error);\n         }\n       });*/\n\n      /*$.ajax('/ajax', {\n         method: 'POST', // 请求方式\n         data: {  // 请求参数\n           name: 'jack',\n           age: 18\n         },\n         headers: { // 请求头\n           xxx: 'xxxxx'\n         },\n         success: function (data) { // 成功的回调函数\n           console.log(data);\n         },\n         error: function (error) { // 失败的回调函数\n           console.log(error);\n         }\n       })*/\n\n      /*\n      $.get('/ajax', {name: 'bob'}, function (data) {\n         console.log(data);\n       })\n       */\n      $.post('/ajax', {name: 'bob'}, function (data) {\n        console.log(data);\n      })\n  })\n<\/script>\n</body>\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);
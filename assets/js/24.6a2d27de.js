(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{233:function(v,l,t){"use strict";t.r(l);var _=t(0),i=Object(_.a)({},(function(){var v=this,l=v.$createElement,t=v._self._c||l;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"svn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#svn"}},[v._v("#")]),v._v(" svn")]),v._v(" "),t("ol",[t("li",[v._v("SVN 全称subversion 是一个集中式版本控制工具")]),v._v(" "),t("li",[v._v("两个区\n"),t("ul",[t("li",[v._v("服务区：用来存储数据的仓库。（创建仓库、创建用户、设置权限等）")]),v._v(" "),t("li",[v._v("用户区：用来写源代码的地方")])])]),v._v(" "),t("li",[v._v("操作：\n"),t("ul",[t("li",[t("p",[v._v("checkout")]),v._v(" "),t("ul",[t("li",[v._v("将远程仓库的所有内容下载（复制、克隆）到本地来（只会做一次）")])])]),v._v(" "),t("li",[t("p",[v._v("update")]),v._v(" "),t("ul",[t("li",[v._v("更新远程仓库的最新的内容（从第二次开始，做多次）")])])]),v._v(" "),t("li",[t("p",[v._v("commit 提交本地的代码到远程仓库去")])]),v._v(" "),t("li",[t("p",[v._v("show log 查看仓库所有代码版本历史记录")])]),v._v(" "),t("li",[t("p",[v._v("revert 撤销本地未提交的代码")])]),v._v(" "),t("li",[t("p",[v._v("update to reversion 回退到仓库保管的指定版本号")])]),v._v(" "),t("li",[t("p",[v._v("删除本地保存的用户名密码，使用其他用户：鼠标右键 -- 小乌龟 -- setting -- saved Data -- clear all")])])])]),v._v(" "),t("li",[v._v("问题：冲突\n"),t("ul",[t("li",[v._v("产生原因：多个人在同一个文件修改了同一处不同代码，产生冲突")]),v._v(" "),t("li",[v._v("解决：\nedit conflicts 编辑冲突\n手动解决：删除多余的代码和文件\n（注意：不要修改别人的代码）")])])]),v._v(" "),t("li",[v._v("分支与合并\n"),t("ul",[t("li",[v._v("checkout  thunk主干   -- 鼠标右键 -- 小乌龟 -- merge -- 选择第一个 -- 选择合并分支文件夹和版本号（注意两个都必须选） -- 下一步、合并")])])])])])}),[],!1,null,null,null);l.default=i.exports}}]);